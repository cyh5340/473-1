project 3	paging
name		Crystal Ho
ID		cyh5340


description	This project is about management virtual memory (as frame with given frame size) in order to keep optimal 
		read/write for paging.
		
		There are two ways of optimization:
		
			First in first out : 
				Pages are assigned to frame by the order it comes in.
				After the frame is full, replace the earliest used page with new page.
				The algorithm is simple
			Clock algorithm    : 
				Pages are assigned to frame by the order it comes in. Reference set to 1.
				After the frame is full, read the reference of each pages. if reference=1, set it to 0.
				Read until there's a reference 0, then replace the page with new one.
				The algorithm is the same as FIFO, just add another array for reference.


Issue		Infinite loop for seg fault
			-> wrong address for read/write; address never set to READ/ WRITE
		Page not appear in array for READ
			-> need to set page to PROT_NONE when it was removed from the frame
		Page evict off
			-> the function did not start from page 1 but page 0
		
